server {
    listen 443 backlog=1024;
    charset utf-8;

    ssl on;
    ssl_certificate /etc/keys/nginx-selfsigned.crt;
    ssl_certificate_key /etc/keys/nginx-selfsigned.key;

    client_max_body_size 75M;

    server_name localhost;

    root /app;

    # We don't actually have a static index.html, it is cshtml generated
    location /Home/Index {
        proxy_pass http://webapp:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    # Most routes are the default route, and render the front-end.
    # JavaScript takes care of rendering the correct page
    location / {
        try_files $uri /Home/Index;
    }

    # ASP.NET calls are here
    location /api {
        proxy_pass http://webapp:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    # OAuth callbacks are here
    location ~ /signin\-.*$ {
        proxy_pass http://webapp:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    # SignalR needs special treatment (the Connection header)
    location /SignalHub {
        proxy_pass http://webapp:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }
}
