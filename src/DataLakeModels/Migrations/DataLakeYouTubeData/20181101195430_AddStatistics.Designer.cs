// <auto-generated />
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using DataLakeModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataLakeModels.Migrations.DataLakeYouTubeData
{
    [DbContext(typeof(DataLakeYouTubeDataContext))]
    [Migration("20181101195430_AddStatistics")]
    partial class AddStatistics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("youtube_data_v3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("DataLakeModels.Models.YouTube.Data.Playlist", b =>
                {
                    b.Property<string>("PlaylistId");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<string>("Description");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<DateTime>("ValidityEnd");

                    b.Property<string[]>("VideoIds")
                        .HasColumnType("text[]");

                    b.HasKey("PlaylistId", "ValidityStart");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("DataLakeModels.Models.YouTube.Data.Statistics", b =>
                {
                    b.Property<string>("VideoId");

                    b.Property<DateTime>("CaptureDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<long>("CommentCount");

                    b.Property<long>("DislikeCount");

                    b.Property<long>("FavoriteCount");

                    b.Property<long>("LikeCount");

                    b.Property<DateTime>("ValidityEnd");

                    b.Property<long>("ViewCount");

                    b.HasKey("VideoId", "CaptureDate", "ValidityStart");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("DataLakeModels.Models.YouTube.Data.Video", b =>
                {
                    b.Property<string>("VideoId");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<string>("ChannelId");

                    b.Property<string>("Duration");

                    b.Property<string>("PrivacyStatus");

                    b.Property<DateTime>("PublishedAt");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<DateTime>("ValidityEnd");

                    b.HasKey("VideoId", "ValidityStart");

                    b.ToTable("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
