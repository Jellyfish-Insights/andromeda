// <auto-generated />
using System;
using DataLakeModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataLakeModels.Migrations.DataLakeAdWords
{
    [DbContext(typeof(DataLakeAdWordsContext))]
    partial class DataLakeAdWordsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("adwords_v201809")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataLakeModels.Models.AdWords.Reports.AdPerformance", b =>
                {
                    b.Property<string>("AdId");

                    b.Property<string>("Date");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<string>("AdGroupId");

                    b.Property<string>("AverageCpc");

                    b.Property<string>("AverageCpe");

                    b.Property<string>("AverageCpm");

                    b.Property<string>("AverageCpv");

                    b.Property<string>("CampaignId");

                    b.Property<string>("Clicks");

                    b.Property<string>("Cost");

                    b.Property<string>("Engagements");

                    b.Property<string>("Headline");

                    b.Property<string>("Impressions");

                    b.Property<DateTime>("ValidityEnd");

                    b.Property<string>("VideoViews");

                    b.HasKey("AdId", "Date", "ValidityStart");

                    b.ToTable("AdPerformanceReports");
                });

            modelBuilder.Entity("DataLakeModels.Models.AdWords.Reports.StructuralCampaignPerformance", b =>
                {
                    b.Property<string>("CampaignId");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<string>("BiddingStrategyId");

                    b.Property<string>("BiddingStrategyName");

                    b.Property<string>("BiddingStrategyType");

                    b.Property<string>("CampaignName");

                    b.Property<string>("CampaignStatus");

                    b.Property<string>("EndDate");

                    b.Property<string>("ServingStatus");

                    b.Property<string>("StartDate");

                    b.Property<DateTime>("ValidityEnd");

                    b.HasKey("CampaignId", "ValidityStart");

                    b.ToTable("StructuralCampaignPerformanceReports");
                });

            modelBuilder.Entity("DataLakeModels.Models.AdWords.Reports.StructuralCriteriaPerformance", b =>
                {
                    b.Property<string>("KeywordId");

                    b.Property<string>("AdGroupId");

                    b.Property<string>("CriteriaType");

                    b.Property<string>("Criteria");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<string>("AdGroupName");

                    b.Property<string>("CampaignId");

                    b.Property<string>("DisplayName");

                    b.Property<string>("IsNegative");

                    b.Property<DateTime>("ValidityEnd");

                    b.HasKey("KeywordId", "AdGroupId", "CriteriaType", "Criteria", "ValidityStart");

                    b.ToTable("StructuralCriteriaPerformanceReports");
                });

            modelBuilder.Entity("DataLakeModels.Models.AdWords.Reports.StructuralVideoPerformance", b =>
                {
                    b.Property<string>("CreativeId");

                    b.Property<DateTime>("ValidityStart");

                    b.Property<DateTime>("ValidityEnd");

                    b.Property<string>("VideoId");

                    b.HasKey("CreativeId", "ValidityStart");

                    b.ToTable("StructuralVideoPerformanceReports");
                });
#pragma warning restore 612, 618
        }
    }
}
